---
// Define main navigation items
const navItems = [
  { 
    label: 'Inicio', 
    url: '/' 
  },
  { 
    label: 'Madrid', 
    url: '/madrid',
    submenu: [
      { label: 'Instalaciones', url: '/madrid' },
      { label: 'Tarifas y Horarios', url: '/madrid/tarifas' },
      { label: 'Contacto', url: '/madrid/contacto' },
      { label: 'Clase Prueba', url: '/madrid/clase-prueba' }
    ]
  },
  { 
    label: 'Villalba', 
    url: '/villalba',
    submenu: [
      { label: 'Instalaciones', url: '/villalba' },
      { label: 'Tarifas y Horarios', url: '/villalba/tarifas' },
      { label: 'Contacto', url: '/villalba/contacto' },
      { label: 'Clase Prueba', url: '/villalba/clase-prueba' }
    ]
  },
  {
    label: 'Cursos',
    url: '/cursos',
    submenu: [
      { label: 'Todos los Cursos', url: '/cursos' },
      { label: 'Entrenamiento Dirigido', url: '/cursos/entrenamiento' },
      { label: 'Entrenamiento Niños', url: '/cursos/entrenamiento-ninos' },
      { label: 'Bautismos de Escalada', url: '/cursos/bautismo' }
    ]
  },
  {
    label: 'Actividades',
    url: '/actividades',
    submenu: [
      { label: 'Todas las Actividades', url: '/actividades' },
      { label: 'Cumpleaños', url: '/actividades/cumpleanos' },
      { label: 'Colegios', url: '/actividades/colegios' },
      { label: 'Empresas', url: '/actividades/empresas' }
    ]
  },
  { label: 'Noticias', url: '/noticias' }
];

// Get current path to highlight active item
const currentPath = Astro.url.pathname;
---

<nav class="hidden md:block">
  <ul class="flex space-x-6">
    {navItems.map(item => (
      <li class="relative group">
        <a 
          href={item.url} 
          class={`nav-link font-medium text-white px-1 py-2 hover:text-black ${currentPath === item.url ? 'nav-link-active' : ''}`}
        >
          {item.label}
        </a>
        
        {item.submenu && (
          <ul class="absolute left-0 mt-2 w-48 bg-[#118c30] rounded-md shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-300 z-50">
            {item.submenu.map(subItem => (
              <li>
                <a 
                  href={subItem.url} 
                  class={`block px-4 py-2 text-sm hover:bg-white ${currentPath === subItem.url ? 'text-primary font-medium' : 'text-white'}`}
                >
                  {subItem.label}
                </a>
              </li>
            ))}
          </ul>
        )}
      </li>
    ))}
  </ul>
</nav>

<!-- Mobile Navigation -->
<div class="md:hidden">
  <button id="mobile-menu-button" class="text-white p-2 focus:outline-none">
    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
    </svg>
  </button>
  
  <div id="mobile-menu" class="fixed inset-0 bg-white z-50 transform translate-x-full transition-transform duration-300 ease-in-out flex flex-col">
    <div class="flex justify-between items-center p-4 border-b">
      <a href="/" class="logo">
        <img 
          src="https://urbanmonkey.es/wp-content/uploads/2023/10/logo_urban_HOME.png" 
          alt="Urban Monkey Logo" 
          class="h-10"
        />
      </a>
      <button id="close-menu" class="p-2">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
    
    <div class="overflow-y-auto flex-1 p-4">
      <ul class="space-y-4">
        {navItems.map(item => (
          <li>
            <div class="flex justify-between items-center">
              <a 
                href={item.url} 
                class={`text-lg font-medium ${currentPath === item.url ? 'text-primary' : 'text-white'}`}
              >
                {item.label}
              </a>
              {item.submenu && (
                <button class="mobile-submenu-toggle p-2">
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                  </svg>
                </button>
              )}
            </div>
            
            {item.submenu && (
              <ul class="pl-4 mt-2 space-y-2 hidden mobile-submenu">
                {item.submenu.map(subItem => (
                  <li>
                    <a 
                      href={subItem.url} 
                      class={`block py-1 ${currentPath === subItem.url ? 'text-primary font-medium' : 'text-white'}`}
                    >
                      {subItem.label}
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </li>
        ))}
      </ul>
    </div>
  </div>
</div>

<script>
  // Mobile menu functionality
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const closeMenuButton = document.getElementById('close-menu');
  const mobileMenu = document.getElementById('mobile-menu');
  const submenuToggles = document.querySelectorAll('.mobile-submenu-toggle');

  mobileMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.remove('translate-x-full');
  });

  closeMenuButton?.addEventListener('click', () => {
    mobileMenu?.classList.add('translate-x-full');
  });

  submenuToggles.forEach(toggle => {
    toggle.addEventListener('click', (e) => {
      const parent = (e.currentTarget as HTMLElement).closest('li');
      const submenu = parent?.querySelector('.mobile-submenu');
      submenu?.classList.toggle('hidden');
    });
  });
</script>